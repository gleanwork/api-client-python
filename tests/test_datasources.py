"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from glean import Glean, models
import os
import pytest
from tests.test_client import create_test_http_client


@pytest.mark.skip(
    reason="incomplete test found please make sure to address the following errors: [`workflow step post_/adddatasource.test referencing operation post_/adddatasource not found in document`]"
)
def test_datasources_post_adddatasource():
    pass


@pytest.mark.skip(
    reason="incomplete test found please make sure to address the following errors: [`workflow step post_/getdatasourceconfig.test referencing operation post_/getdatasourceconfig not found in document`]"
)
def test_datasources_post_getdatasourceconfig():
    pass


def test_datasources_post_api_index_v1_adddatasource():
    test_http_client = create_test_http_client("post_/api/index/v1/adddatasource")

    with Glean(
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        g_client.index.datasources.add(
            name="<value>",
            url_regex="https://example-company.datasource.com/.*",
            quicklinks=[
                {
                    "icon_config": {
                        "color": "#343CED",
                        "key": "person_icon",
                        "icon_type": models.IconType.GLYPH,
                        "name": "user",
                    },
                },
            ],
        )


def test_datasources_post_api_index_v1_getdatasourceconfig():
    test_http_client = create_test_http_client("post_/api/index/v1/getdatasourceconfig")

    with Glean(
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        res = g_client.index.datasources.get_config(datasource="<value>")
        assert res is not None
        assert res == models.CustomDatasourceConfig(
            name="<value>",
            url_regex="https://example-company.datasource.com/.*",
            quicklinks=[
                models.Quicklink(
                    icon_config=models.IconConfig(
                        color="#343CED",
                        key="person_icon",
                        icon_type=models.IconType.GLYPH,
                        name="user",
                    ),
                ),
                models.Quicklink(
                    icon_config=models.IconConfig(
                        color="#343CED",
                        key="person_icon",
                        icon_type=models.IconType.GLYPH,
                        name="user",
                    ),
                ),
            ],
        )
