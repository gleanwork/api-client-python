"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from glean import Glean, models
import os
from tests.test_client import create_test_http_client


def test_indexing_documents_post_api_index_v1_indexdocument():
    test_http_client = create_test_http_client("post_/api/index/v1/indexdocument")

    with Glean(
        server_url=os.getenv("TEST_SERVER_URL", "http://localhost:18080"),
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        g_client.indexing.documents.add_or_update(
            document=models.DocumentDefinition(
                datasource="<value>",
            )
        )


def test_indexing_documents_post_api_index_v1_indexdocuments():
    test_http_client = create_test_http_client("post_/api/index/v1/indexdocuments")

    with Glean(
        server_url=os.getenv("TEST_SERVER_URL", "http://localhost:18080"),
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        g_client.indexing.documents.index(
            datasource="<value>",
            documents=[
                models.DocumentDefinition(
                    datasource="<value>",
                ),
            ],
        )


def test_indexing_documents_post_api_index_v1_bulkindexdocuments():
    test_http_client = create_test_http_client("post_/api/index/v1/bulkindexdocuments")

    with Glean(
        server_url=os.getenv("TEST_SERVER_URL", "http://localhost:18080"),
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        g_client.indexing.documents.bulk_index(
            upload_id="<id>",
            datasource="<value>",
            documents=[
                models.DocumentDefinition(
                    datasource="<value>",
                ),
            ],
        )


def test_indexing_documents_post_api_index_v1_processalldocuments():
    test_http_client = create_test_http_client("post_/api/index/v1/processalldocuments")

    with Glean(
        server_url=os.getenv("TEST_SERVER_URL", "http://localhost:18080"),
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        g_client.indexing.documents.process_all()


def test_indexing_documents_post_api_index_v1_deletedocument():
    test_http_client = create_test_http_client("post_/api/index/v1/deletedocument")

    with Glean(
        server_url=os.getenv("TEST_SERVER_URL", "http://localhost:18080"),
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        g_client.indexing.documents.delete(
            datasource="<value>", object_type="<value>", id="<id>"
        )
