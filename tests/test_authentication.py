"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from glean import Glean, models
import os
import pytest
from tests.test_client import create_test_http_client


def test_authentication_createanonymoustoken():
    test_http_client = create_test_http_client("createanonymoustoken")

    with Glean(
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        res = g_client.client.authentication.create_anonymous_token()
        assert res is not None
        assert res == models.CreateAuthTokenResponse(
            token="<value>",
            expiration_time=553132,
        )


def test_authentication_createauthtoken():
    test_http_client = create_test_http_client("createauthtoken")

    with Glean(
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        res = g_client.client.authentication.create_token()
        assert res is not None
        assert res == models.CreateAuthTokenResponse(
            token="<value>",
            expiration_time=553132,
        )


@pytest.mark.skip(
    reason="incomplete test found please make sure to address the following errors: [`workflow step post_/rotatetoken.test referencing operation post_/rotatetoken not found in document`]"
)
def test_authentication_post_rotatetoken():
    pass


def test_authentication_post_api_index_v1_rotatetoken():
    test_http_client = create_test_http_client("post_/api/index/v1/rotatetoken")

    with Glean(
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        res = g_client.index.authentication.rotate_token()
        assert res is not None
        assert res == models.RotateTokenResponse()
