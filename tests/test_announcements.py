"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from glean import Glean, models
from glean.utils import parse_datetime
import os
import pytest
from tests.test_client import create_test_http_client


def test_announcements_createannouncement():
    test_http_client = create_test_http_client("createannouncement")

    with Glean(
        server_url=os.getenv("TEST_SERVER_URL", "http://localhost:18080"),
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        res = g_client.client.announcements.create(
            start_time=parse_datetime("2024-06-17T07:14:55.338Z"),
            end_time=parse_datetime("2024-11-30T17:06:07.804Z"),
            title="<value>",
            body={
                "text": "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                "structured_list": [],
            },
            audience_filters=[
                {
                    "field_name": "type",
                    "values": [
                        {
                            "value": "Spreadsheet",
                            "relation_type": models.RelationType.EQUALS,
                        },
                        {
                            "value": "Presentation",
                            "relation_type": models.RelationType.EQUALS,
                        },
                    ],
                },
            ],
        )
        assert res is not None


@pytest.mark.skip(
    reason="incomplete test found please make sure to address the following errors: [`workflow step createdraftannouncement.test referencing operation createdraftannouncement not found in document`]"
)
def test_announcements_createdraftannouncement():
    pass


def test_announcements_deleteannouncement():
    test_http_client = create_test_http_client("deleteannouncement")

    with Glean(
        server_url=os.getenv("TEST_SERVER_URL", "http://localhost:18080"),
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        g_client.client.announcements.delete(id=545907)


@pytest.mark.skip(
    reason="incomplete test found please make sure to address the following errors: [`workflow step deletedraftannouncement.test referencing operation deletedraftannouncement not found in document`]"
)
def test_announcements_deletedraftannouncement():
    pass


@pytest.mark.skip(
    reason="incomplete test found please make sure to address the following errors: [`workflow step getannouncement.test referencing operation getannouncement not found in document`]"
)
def test_announcements_getannouncement():
    pass


@pytest.mark.skip(
    reason="incomplete test found please make sure to address the following errors: [`workflow step getdraftannouncement.test referencing operation getdraftannouncement not found in document`]"
)
def test_announcements_getdraftannouncement():
    pass


@pytest.mark.skip(
    reason="incomplete test found please make sure to address the following errors: [`workflow step listannouncements.test referencing operation listannouncements not found in document`]"
)
def test_announcements_listannouncements():
    pass


@pytest.mark.skip(
    reason="incomplete test found please make sure to address the following errors: [`workflow step previewannouncement.test referencing operation previewannouncement not found in document`]"
)
def test_announcements_previewannouncement():
    pass


@pytest.mark.skip(
    reason="incomplete test found please make sure to address the following errors: [`workflow step previewannouncementdraft.test referencing operation previewannouncementdraft not found in document`]"
)
def test_announcements_previewannouncementdraft():
    pass


@pytest.mark.skip(
    reason="incomplete test found please make sure to address the following errors: [`workflow step publishdraftannouncement.test referencing operation publishdraftannouncement not found in document`]"
)
def test_announcements_publishdraftannouncement():
    pass


@pytest.mark.skip(
    reason="incomplete test found please make sure to address the following errors: [`workflow step unpublishannouncement.test referencing operation unpublishannouncement not found in document`]"
)
def test_announcements_unpublishannouncement():
    pass


def test_announcements_updateannouncement():
    test_http_client = create_test_http_client("updateannouncement")

    with Glean(
        server_url=os.getenv("TEST_SERVER_URL", "http://localhost:18080"),
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        res = g_client.client.announcements.update(
            start_time=parse_datetime("2025-07-28T19:04:48.565Z"),
            end_time=parse_datetime("2024-10-16T10:52:42.015Z"),
            title="<value>",
            id=761625,
            body={
                "text": "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                "structured_list": [],
            },
            audience_filters=[
                {
                    "field_name": "type",
                    "values": [
                        {
                            "value": "Spreadsheet",
                            "relation_type": models.RelationType.EQUALS,
                        },
                        {
                            "value": "Presentation",
                            "relation_type": models.RelationType.EQUALS,
                        },
                    ],
                },
            ],
        )
        assert res is not None


@pytest.mark.skip(
    reason="incomplete test found please make sure to address the following errors: [`workflow step updatedraftannouncement.test referencing operation updatedraftannouncement not found in document`]"
)
def test_announcements_updatedraftannouncement():
    pass
