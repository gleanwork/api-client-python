"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from datetime import date
from glean import Glean, models
import os
from tests.test_client import create_test_http_client


def test_shortcuts_createshortcut():
    test_http_client = create_test_http_client("createshortcut")

    with Glean(
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        res = g_client.client.shortcuts.create(
            data={
                "added_roles": [
                    models.UserRoleSpecification(
                        person=models.Person(
                            name="George Clooney",
                            obfuscated_id="abc123",
                            related_documents=[],
                            metadata=models.PersonMetadata(
                                type=models.PersonMetadataType.FULL_TIME,
                                title="Actor",
                                department="Movies",
                                email="george@example.com",
                                location="Hollywood, CA",
                                phone="6505551234",
                                photo_url="https://example.com/george.jpg",
                                start_date=date.fromisoformat("2000-01-23"),
                                datasource_profile=[],
                                query_suggestions=models.QuerySuggestionList(
                                    suggestions=[],
                                ),
                                invite_info=models.InviteInfo(
                                    invites=[],
                                ),
                                custom_fields=[],
                                badges=[
                                    models.Badge(
                                        key="deployment_name_new_hire",
                                        display_name="New hire",
                                        icon_config=models.IconConfig(
                                            color="#343CED",
                                            key="person_icon",
                                            icon_type=models.IconType.GLYPH,
                                            name="user",
                                        ),
                                    ),
                                ],
                            ),
                        ),
                        role=models.UserRole.VIEWER,
                    ),
                    models.UserRoleSpecification(
                        role=models.UserRole.VIEWER,
                    ),
                ],
                "removed_roles": [
                    models.UserRoleSpecification(
                        role=models.UserRole.VIEWER,
                    ),
                    models.UserRoleSpecification(
                        role=models.UserRole.VIEWER,
                    ),
                    models.UserRoleSpecification(
                        role=models.UserRole.VIEWER,
                    ),
                ],
            }
        )
        assert res is not None
        assert res == models.CreateShortcutResponse(
            shortcut=models.Shortcut(
                input_alias="<value>",
                destination_url="https://probable-heating.com/",
                created_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","phone":"6505551234","photoUrl":"https://example.com/george.jpg","startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[{"query":"app:github type:pull author:mortimer","label":"Mortimer\'s PRs","datasource":"github"}]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[{"key":"deployment_name_new_hire","displayName":"New hire","iconConfig":{"color":"#343CED","key":"person_icon","iconType":"GLYPH","name":"user"}}]}}',
                updated_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
            ),
        )


def test_shortcuts_deleteshortcut():
    test_http_client = create_test_http_client("deleteshortcut")

    with Glean(
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        g_client.client.shortcuts.delete(id=726997)


def test_shortcuts_getshortcut():
    test_http_client = create_test_http_client("getshortcut")

    with Glean(
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        res = g_client.client.shortcuts.get(get_shortcut_request={})
        assert res is not None
        assert res == models.GetShortcutResponse(
            shortcut=models.Shortcut(
                input_alias="<value>",
                destination_url="https://normal-making.name",
                created_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","phone":"6505551234","photoUrl":"https://example.com/george.jpg","startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[{"query":"app:github type:pull author:mortimer","label":"Mortimer\'s PRs","datasource":"github"}]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[{"key":"deployment_name_new_hire","displayName":"New hire","iconConfig":{"color":"#343CED","key":"person_icon","iconType":"GLYPH","name":"user"}}]}}',
                updated_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
            ),
        )


def test_shortcuts_getsimilarshortcuts():
    test_http_client = create_test_http_client("getsimilarshortcuts")

    with Glean(
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        res = g_client.client.shortcuts.get_similar(alias="<value>")
        assert res is not None
        assert res == models.GetSimilarShortcutsResponse(
            shortcuts=[
                models.Shortcut(
                    input_alias="<value>",
                    destination_url="https://glossy-blight.info/",
                    created_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","phone":"6505551234","photoUrl":"https://example.com/george.jpg","startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[{"query":"app:github type:pull author:mortimer","label":"Mortimer\'s PRs","datasource":"github"}]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[{"key":"deployment_name_new_hire","displayName":"New hire","iconConfig":{"color":"#343CED","key":"person_icon","iconType":"GLYPH","name":"user"}}]}}',
                    updated_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
                ),
                models.Shortcut(
                    input_alias="<value>",
                    destination_url="https://ill-fated-petal.info",
                    created_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
                    updated_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
                ),
                models.Shortcut(
                    input_alias="<value>",
                    destination_url="https://limited-stitcher.biz",
                    created_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
                    updated_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
                ),
            ],
        )


def test_shortcuts_listshortcuts():
    test_http_client = create_test_http_client("listshortcuts")

    with Glean(
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        res = g_client.client.shortcuts.list(
            page_size=10,
            filters=[
                {
                    "field_name": "type",
                    "values": [
                        {
                            "value": "Spreadsheet",
                            "relation_type": models.RelationType.EQUALS,
                        },
                        {
                            "value": "Presentation",
                            "relation_type": models.RelationType.EQUALS,
                        },
                    ],
                },
            ],
        )
        assert res is not None
        assert res == models.ListShortcutsPaginatedResponse(
            shortcuts=[
                models.Shortcut(
                    input_alias="<value>",
                    destination_url="https://neglected-plastic.biz",
                    created_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","phone":"6505551234","photoUrl":"https://example.com/george.jpg","startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[{"query":"app:github type:pull author:mortimer","label":"Mortimer\'s PRs","datasource":"github"}]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[{"key":"deployment_name_new_hire","displayName":"New hire","iconConfig":{"color":"#343CED","key":"person_icon","iconType":"GLYPH","name":"user"}}]}}',
                    updated_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
                ),
                models.Shortcut(
                    input_alias="<value>",
                    destination_url="https://crooked-overload.name/",
                    created_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
                    updated_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
                ),
            ],
            facet_results=[
                models.FacetResult(
                    source_name="container_name",
                    operator_name="SelectMultiple",
                    buckets=[
                        models.FacetBucket(
                            count=1,
                            datasource="jira",
                            percentage=5,
                            value=models.FacetValue(
                                string_value="engineering",
                                integer_value=5,
                                display_label="engineering",
                                icon_config=models.IconConfig(
                                    color="#343CED",
                                    key="person_icon",
                                    icon_type=models.IconType.GLYPH,
                                    name="user",
                                ),
                            ),
                        ),
                        models.FacetBucket(
                            count=1,
                            datasource="jira",
                            percentage=5,
                            value=models.FacetValue(
                                string_value="engineering",
                                integer_value=5,
                                display_label="engineering",
                                icon_config=models.IconConfig(
                                    color="#343CED",
                                    key="person_icon",
                                    icon_type=models.IconType.GLYPH,
                                    name="user",
                                ),
                            ),
                        ),
                    ],
                    has_more_buckets=False,
                    group_name="Service Cloud",
                ),
                models.FacetResult(
                    source_name="container_name",
                    operator_name="SelectMultiple",
                    buckets=[],
                    has_more_buckets=False,
                    group_name="Service Cloud",
                ),
            ],
            meta=models.ShortcutsPaginationMetadata(),
        )


def test_shortcuts_previewshortcut():
    test_http_client = create_test_http_client("previewshortcut")

    with Glean(
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        res = g_client.client.shortcuts.preview(
            added_roles=[
                models.UserRoleSpecification(
                    person=models.Person(
                        name="George Clooney",
                        obfuscated_id="abc123",
                        related_documents=[],
                        metadata=models.PersonMetadata(
                            type=models.PersonMetadataType.FULL_TIME,
                            title="Actor",
                            department="Movies",
                            email="george@example.com",
                            location="Hollywood, CA",
                            phone="6505551234",
                            photo_url="https://example.com/george.jpg",
                            start_date=date.fromisoformat("2000-01-23"),
                            datasource_profile=[],
                            query_suggestions=models.QuerySuggestionList(
                                suggestions=[],
                            ),
                            invite_info=models.InviteInfo(
                                invites=[],
                            ),
                            custom_fields=[],
                            badges=[
                                models.Badge(
                                    key="deployment_name_new_hire",
                                    display_name="New hire",
                                    icon_config=models.IconConfig(
                                        color="#343CED",
                                        key="person_icon",
                                        icon_type=models.IconType.GLYPH,
                                        name="user",
                                    ),
                                ),
                            ],
                        ),
                    ),
                    role=models.UserRole.VIEWER,
                ),
                models.UserRoleSpecification(
                    role=models.UserRole.VIEWER,
                ),
            ],
            removed_roles=[
                models.UserRoleSpecification(
                    person=models.Person(
                        name="George Clooney",
                        obfuscated_id="abc123",
                        related_documents=[],
                        metadata=models.PersonMetadata(
                            type=models.PersonMetadataType.FULL_TIME,
                            title="Actor",
                            department="Movies",
                            email="george@example.com",
                            location="Hollywood, CA",
                            management_chain=[],
                            phone="6505551234",
                            photo_url="https://example.com/george.jpg",
                            reports=[],
                            start_date=date.fromisoformat("2000-01-23"),
                            datasource_profile=[],
                            query_suggestions=models.QuerySuggestionList(
                                suggestions=[],
                            ),
                            invite_info=models.InviteInfo(
                                invites=[],
                            ),
                            custom_fields=[],
                            badges=[],
                        ),
                    ),
                    role=models.UserRole.VIEWER,
                ),
                models.UserRoleSpecification(
                    role=models.UserRole.VIEWER,
                ),
                models.UserRoleSpecification(
                    role=models.UserRole.VIEWER,
                ),
            ],
        )
        assert res is not None
        assert res == models.PreviewShortcutResponse(
            shortcut=models.Shortcut(
                input_alias="<value>",
                destination_url="https://curly-meal.name/",
                created_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","phone":"6505551234","photoUrl":"https://example.com/george.jpg","startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[{"query":"app:github type:pull author:mortimer","label":"Mortimer\'s PRs","datasource":"github"}]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[{"key":"deployment_name_new_hire","displayName":"New hire","iconConfig":{"color":"#343CED","key":"person_icon","iconType":"GLYPH","name":"user"}}]}}',
                updated_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
            ),
            existing_url_shortcuts=[
                models.Shortcut(
                    input_alias="<value>",
                    destination_url="https://thick-space.biz/",
                    created_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
                    updated_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
                ),
                models.Shortcut(
                    input_alias="<value>",
                    destination_url="https://pale-scholarship.info/",
                    created_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
                    updated_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
                ),
                models.Shortcut(
                    input_alias="<value>",
                    destination_url="https://dutiful-hyena.info",
                    created_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
                    updated_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
                ),
            ],
        )


def test_shortcuts_updateshortcut():
    test_http_client = create_test_http_client("updateshortcut")

    with Glean(
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        res = g_client.client.shortcuts.update(
            id=563449,
            added_roles=[
                models.UserRoleSpecification(
                    person=models.Person(
                        name="George Clooney",
                        obfuscated_id="abc123",
                        related_documents=[],
                        metadata=models.PersonMetadata(
                            type=models.PersonMetadataType.FULL_TIME,
                            title="Actor",
                            department="Movies",
                            email="george@example.com",
                            location="Hollywood, CA",
                            phone="6505551234",
                            photo_url="https://example.com/george.jpg",
                            start_date=date.fromisoformat("2000-01-23"),
                            datasource_profile=[],
                            query_suggestions=models.QuerySuggestionList(
                                suggestions=[],
                            ),
                            invite_info=models.InviteInfo(
                                invites=[],
                            ),
                            custom_fields=[],
                            badges=[
                                models.Badge(
                                    key="deployment_name_new_hire",
                                    display_name="New hire",
                                    icon_config=models.IconConfig(
                                        color="#343CED",
                                        key="person_icon",
                                        icon_type=models.IconType.GLYPH,
                                        name="user",
                                    ),
                                ),
                            ],
                        ),
                    ),
                    role=models.UserRole.VIEWER,
                ),
                models.UserRoleSpecification(
                    role=models.UserRole.VIEWER,
                ),
            ],
            removed_roles=[
                models.UserRoleSpecification(
                    person=models.Person(
                        name="George Clooney",
                        obfuscated_id="abc123",
                        related_documents=[],
                        metadata=models.PersonMetadata(
                            type=models.PersonMetadataType.FULL_TIME,
                            title="Actor",
                            department="Movies",
                            email="george@example.com",
                            location="Hollywood, CA",
                            management_chain=[],
                            phone="6505551234",
                            photo_url="https://example.com/george.jpg",
                            reports=[],
                            start_date=date.fromisoformat("2000-01-23"),
                            datasource_profile=[],
                            query_suggestions=models.QuerySuggestionList(
                                suggestions=[],
                            ),
                            invite_info=models.InviteInfo(
                                invites=[],
                            ),
                            custom_fields=[],
                            badges=[],
                        ),
                    ),
                    role=models.UserRole.VIEWER,
                ),
                models.UserRoleSpecification(
                    role=models.UserRole.VIEWER,
                ),
            ],
        )
        assert res is not None
        assert res == models.UpdateShortcutResponse(
            shortcut=models.Shortcut(
                input_alias="<value>",
                destination_url="https://passionate-flu.org",
                created_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","phone":"6505551234","photoUrl":"https://example.com/george.jpg","startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[{"query":"app:github type:pull author:mortimer","label":"Mortimer\'s PRs","datasource":"github"}]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[{"key":"deployment_name_new_hire","displayName":"New hire","iconConfig":{"color":"#343CED","key":"person_icon","iconType":"GLYPH","name":"user"}}]}}',
                updated_by='{"name":"George Clooney","obfuscatedId":"abc123","relatedDocuments":[],"metadata":{"type":"FULL_TIME","title":"Actor","department":"Movies","email":"george@example.com","location":"Hollywood, CA","managementChain":[],"phone":"6505551234","photoUrl":"https://example.com/george.jpg","reports":[],"startDate":"2000-01-23","datasourceProfile":[],"querySuggestions":{"suggestions":[]},"inviteInfo":{"invites":[]},"customFields":[],"badges":[]}}',
            ),
        )
