"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from glean import Glean, models
import os
from tests.test_client import create_test_http_client


def test_displayablelists_createdisplayablelists():
    test_http_client = create_test_http_client("createdisplayablelists")

    with Glean(
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        res = g_client.client.displayable_lists.create(items=[])
        assert res is not None
        assert res == models.CreateDisplayableListsResponse(
            items=[
                models.DisplayableList(
                    config=models.DisplayableListConfig(
                        audience_filters=[
                            models.FacetFilter(
                                field_name="type",
                                values=[
                                    models.FacetFilterValue(
                                        value="Spreadsheet",
                                        relation_type=models.RelationType.EQUALS,
                                    ),
                                    models.FacetFilterValue(
                                        value="Presentation",
                                        relation_type=models.RelationType.EQUALS,
                                    ),
                                ],
                            ),
                        ],
                    ),
                ),
                models.DisplayableList(
                    config=models.DisplayableListConfig(
                        audience_filters=[],
                    ),
                ),
            ],
        )


def test_displayablelists_deletedisplayablelists():
    test_http_client = create_test_http_client("deletedisplayablelists")

    with Glean(
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        g_client.client.displayable_lists.delete(
            ids=[
                195135,
                291197,
                892431,
            ]
        )


def test_displayablelists_getdisplayablelists():
    test_http_client = create_test_http_client("getdisplayablelists")

    with Glean(
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        res = g_client.client.displayable_lists.get(
            ids=[
                565952,
                559975,
                649118,
            ]
        )
        assert res is not None
        assert res == models.GetDisplayableListsResponse(
            items=[],
        )


def test_displayablelists_updatedisplayablelists():
    test_http_client = create_test_http_client("updatedisplayablelists")

    with Glean(
        client=test_http_client,
        bearer_auth=os.getenv("GLEAN_BEARER_AUTH", "value"),
    ) as g_client:
        assert g_client is not None

        res = g_client.client.displayable_lists.update(
            items=[
                {
                    "config": {
                        "audience_filters": [
                            {
                                "field_name": "type",
                                "values": [
                                    {
                                        "value": "Spreadsheet",
                                        "relation_type": models.RelationType.EQUALS,
                                    },
                                    {
                                        "value": "Presentation",
                                        "relation_type": models.RelationType.EQUALS,
                                    },
                                ],
                            },
                        ],
                    },
                },
            ]
        )
        assert res is not None
        assert res == models.UpdateDisplayableListsResponse(
            items=[],
        )
