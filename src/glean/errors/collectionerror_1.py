"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from glean import utils
from glean.types import BaseModel
import pydantic
from typing_extensions import Annotated


class ErrorCode(str, Enum):
    NAME_EXISTS = "NAME_EXISTS"
    NOT_FOUND = "NOT_FOUND"
    COLLECTION_PINNED = "COLLECTION_PINNED"
    CONCURRENT_HIERARCHY_EDIT = "CONCURRENT_HIERARCHY_EDIT"
    HEIGHT_VIOLATION = "HEIGHT_VIOLATION"
    WIDTH_VIOLATION = "WIDTH_VIOLATION"
    NO_PERMISSIONS = "NO_PERMISSIONS"


class CollectionErrorData(BaseModel):
    error_code: Annotated[ErrorCode, pydantic.Field(alias="errorCode")]


class CollectionError(Exception):
    data: CollectionErrorData

    def __init__(self, data: CollectionErrorData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, CollectionErrorData)
