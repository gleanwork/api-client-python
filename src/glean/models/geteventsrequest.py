"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .authtoken import AuthToken, AuthTokenTypedDict
from glean.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetEventsRequestTypedDict(TypedDict):
    ids: List[str]
    r"""The ids of the calendar events to be retrieved."""
    auth_tokens: NotRequired[List[AuthTokenTypedDict]]
    r"""Auth tokens if client-side authentication."""
    datasource: NotRequired[str]
    r"""The app or other repository type from which the event was extracted"""
    annotate: NotRequired[bool]
    r"""Whether relevant content and documents, via GeneratedAttachments, should be attached to the events."""


class GetEventsRequest(BaseModel):
    ids: List[str]
    r"""The ids of the calendar events to be retrieved."""

    auth_tokens: Annotated[
        Optional[List[AuthToken]], pydantic.Field(alias="authTokens")
    ] = None
    r"""Auth tokens if client-side authentication."""

    datasource: Optional[str] = None
    r"""The app or other repository type from which the event was extracted"""

    annotate: Optional[bool] = None
    r"""Whether relevant content and documents, via GeneratedAttachments, should be attached to the events."""
