"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .feedresult import FeedResult, FeedResultTypedDict
from glean.types import BaseModel
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class GetEventsResponseTypedDict(TypedDict):
    events: NotRequired[List[FeedResultTypedDict]]
    r"""The requested events. Uses a FeedResult for now as a Calendar Event doesn't have all event info such as attachments."""


class GetEventsResponse(BaseModel):
    events: Optional[List[FeedResult]] = None
    r"""The requested events. Uses a FeedResult for now as a Calendar Event doesn't have all event info such as attachments."""
