"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.types import BaseModel
import pydantic
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SharingSettingsTypedDict(TypedDict):
    auto_share_response: NotRequired[bool]
    r"""Whether the agent should share the response directly without requiring user confirmation."""
    disable_sharing: NotRequired[bool]
    r"""Whether the user should see an option to share the response with everyone. This is only relevant when autoShareResponse is false.

    """


class SharingSettings(BaseModel):
    auto_share_response: Annotated[
        Optional[bool], pydantic.Field(alias="autoShareResponse")
    ] = None
    r"""Whether the agent should share the response directly without requiring user confirmation."""

    disable_sharing: Annotated[
        Optional[bool], pydantic.Field(alias="disableSharing")
    ] = None
    r"""Whether the user should see an option to share the response with everyone. This is only relevant when autoShareResponse is false.

    """


class WorkflowSlackConfigTypedDict(TypedDict):
    r"""Configuration for the Agent's behaviour in Slack"""

    enabled: NotRequired[bool]
    r"""Indicates whether the Agent can be used in Slack for the associated channels."""
    instance_channels: NotRequired[Dict[str, List[str]]]
    r"""Map of data source instance name corresponding to slack / slack enterprise to a list of channel ids.

    """
    sharing_settings: NotRequired[SharingSettingsTypedDict]


class WorkflowSlackConfig(BaseModel):
    r"""Configuration for the Agent's behaviour in Slack"""

    enabled: Optional[bool] = None
    r"""Indicates whether the Agent can be used in Slack for the associated channels."""

    instance_channels: Annotated[
        Optional[Dict[str, List[str]]], pydantic.Field(alias="instanceChannels")
    ] = None
    r"""Map of data source instance name corresponding to slack / slack enterprise to a list of channel ids.

    """

    sharing_settings: Annotated[
        Optional[SharingSettings], pydantic.Field(alias="sharingSettings")
    ] = None
