"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GleanSearchInclusionsTypedDict(TypedDict):
    r"""Inclusion filters to configure the content source for a search tool in the agent. If empty, all content sources are included."""

    container_ids: NotRequired[List[str]]
    super_container_ids: NotRequired[List[str]]
    datasource_instances: NotRequired[List[str]]
    document_ids: NotRequired[List[str]]
    file_ids: NotRequired[List[str]]
    r"""List of uploaded file doc ids to include in the corpus."""


class GleanSearchInclusions(BaseModel):
    r"""Inclusion filters to configure the content source for a search tool in the agent. If empty, all content sources are included."""

    container_ids: Annotated[
        Optional[List[str]], pydantic.Field(alias="containerIds")
    ] = None

    super_container_ids: Annotated[
        Optional[List[str]], pydantic.Field(alias="superContainerIds")
    ] = None

    datasource_instances: Annotated[
        Optional[List[str]], pydantic.Field(alias="datasourceInstances")
    ] = None

    document_ids: Annotated[
        Optional[List[str]], pydantic.Field(alias="documentIds")
    ] = None

    file_ids: Annotated[Optional[List[str]], pydantic.Field(alias="fileIds")] = None
    r"""List of uploaded file doc ids to include in the corpus."""
