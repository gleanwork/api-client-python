"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .displayablelistitemuiconfig import (
    DisplayableListItemUIConfig,
    DisplayableListItemUIConfigTypedDict,
)
from .facetfilter import FacetFilter, FacetFilterTypedDict
from enum import Enum
from glean.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DisplayableListConfigFormat(str, Enum):
    r"""defines how to render this particular displayable list card"""

    LIST = "LIST"


class DisplayableListConfigTypedDict(TypedDict):
    r"""UI specific configurations for a displayable list"""

    format_: NotRequired[DisplayableListConfigFormat]
    r"""defines how to render this particular displayable list card"""
    title: NotRequired[str]
    r"""Primary title for the list."""
    enabled: NotRequired[bool]
    r"""Whether the list should be shown to the user"""
    audience_filters: NotRequired[List[FacetFilterTypedDict]]
    r"""Filters which restrict who should should see displayable list"""
    item_ui_config: NotRequired[DisplayableListItemUIConfigTypedDict]
    r"""UI configurations for each item of the list"""


class DisplayableListConfig(BaseModel):
    r"""UI specific configurations for a displayable list"""

    format_: Annotated[
        Optional[DisplayableListConfigFormat], pydantic.Field(alias="format")
    ] = None
    r"""defines how to render this particular displayable list card"""

    title: Optional[str] = None
    r"""Primary title for the list."""

    enabled: Optional[bool] = None
    r"""Whether the list should be shown to the user"""

    audience_filters: Annotated[
        Optional[List[FacetFilter]], pydantic.Field(alias="audienceFilters")
    ] = None
    r"""Filters which restrict who should should see displayable list"""

    item_ui_config: Annotated[
        Optional[DisplayableListItemUIConfig], pydantic.Field(alias="itemUIConfig")
    ] = None
    r"""UI configurations for each item of the list"""
