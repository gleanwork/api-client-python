"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .communicationchannel import CommunicationChannel
from .communicationtemplate import CommunicationTemplate
from .peoplefilters import PeopleFilters, PeopleFiltersTypedDict
from .person import Person, PersonTypedDict
from glean.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class InviteRequestTypedDict(TypedDict):
    r"""A request to send an invite to the specified user[s]"""

    channel: NotRequired[CommunicationChannel]
    template: NotRequired[CommunicationTemplate]
    r"""The type of email to send"""
    recipients: NotRequired[List[PersonTypedDict]]
    r"""The people who should receive this invite"""
    recipient_filters: NotRequired[PeopleFiltersTypedDict]


class InviteRequest(BaseModel):
    r"""A request to send an invite to the specified user[s]"""

    channel: Optional[CommunicationChannel] = None

    template: Optional[CommunicationTemplate] = None
    r"""The type of email to send"""

    recipients: Optional[List[Person]] = None
    r"""The people who should receive this invite"""

    recipient_filters: Annotated[
        Optional[PeopleFilters], pydantic.Field(alias="recipientFilters")
    ] = None
