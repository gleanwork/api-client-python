"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .addcredentialrequest import AddCredentialRequest, AddCredentialRequestTypedDict
from glean.types import BaseModel
from glean.utils import FieldMetadata, HeaderMetadata, RequestMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AddcredentialRequestRequestTypedDict(TypedDict):
    add_credential_request: AddCredentialRequestTypedDict
    r"""Credential content"""
    x_scio_actas: NotRequired[str]
    r"""Email address of a user on whose behalf the request is intended to be made (should be non-empty only for global tokens)."""
    x_glean_auth_type: NotRequired[str]
    r"""Auth type being used to access the endpoint (should be non-empty only for global tokens)."""


class AddcredentialRequestRequest(BaseModel):
    add_credential_request: Annotated[
        AddCredentialRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
    r"""Credential content"""

    x_scio_actas: Annotated[
        Optional[str],
        pydantic.Field(alias="X-Scio-Actas"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None
    r"""Email address of a user on whose behalf the request is intended to be made (should be non-empty only for global tokens)."""

    x_glean_auth_type: Annotated[
        Optional[str],
        pydantic.Field(alias="X-Glean-Auth-Type"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None
    r"""Auth type being used to access the endpoint (should be non-empty only for global tokens)."""
