"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.types import BaseModel
from typing import Dict, Optional
from typing_extensions import NotRequired, TypedDict


class ThemesTypedDict(TypedDict):
    r"""A set of Theme objects to make available to the user based on their chosen preference. If a theme variant is not supplied, the default theme will be used."""

    light: NotRequired[Dict[str, str]]
    r"""A map of {string, string} pairs where the key represents a known theme option and the value is the CSS color to apply. Supported options are documented in https://dev.glean.com/meta/browser_api/interfaces/Theme.html."""
    dark: NotRequired[Dict[str, str]]
    r"""A map of {string, string} pairs where the key represents a known theme option and the value is the CSS color to apply. Supported options are documented in https://dev.glean.com/meta/browser_api/interfaces/Theme.html."""


class Themes(BaseModel):
    r"""A set of Theme objects to make available to the user based on their chosen preference. If a theme variant is not supplied, the default theme will be used."""

    light: Optional[Dict[str, str]] = None
    r"""A map of {string, string} pairs where the key represents a known theme option and the value is the CSS color to apply. Supported options are documented in https://dev.glean.com/meta/browser_api/interfaces/Theme.html."""

    dark: Optional[Dict[str, str]] = None
    r"""A map of {string, string} pairs where the key represents a known theme option and the value is the CSS color to apply. Supported options are documented in https://dev.glean.com/meta/browser_api/interfaces/Theme.html."""
