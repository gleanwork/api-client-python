"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .writeactionparameter import WriteActionParameter, WriteActionParameterTypedDict
from glean.types import BaseModel
import pydantic
from typing import Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ExecuteActionToolRequestTypedDict(TypedDict):
    name: str
    r"""The name of the tool."""
    action_run_id: NotRequired[str]
    r"""Unique identifier for this actionRun execution event."""
    action_instance_id: NotRequired[str]
    r"""Unique identifier of an action instance."""
    parameters: NotRequired[Dict[str, WriteActionParameterTypedDict]]
    r"""The parameters to be passed to the tool for action."""


class ExecuteActionToolRequest(BaseModel):
    name: str
    r"""The name of the tool."""

    action_run_id: Annotated[Optional[str], pydantic.Field(alias="actionRunId")] = None
    r"""Unique identifier for this actionRun execution event."""

    action_instance_id: Annotated[
        Optional[str], pydantic.Field(alias="actionInstanceId")
    ] = None
    r"""Unique identifier of an action instance."""

    parameters: Optional[Dict[str, WriteActionParameter]] = None
    r"""The parameters to be passed to the tool for action."""
