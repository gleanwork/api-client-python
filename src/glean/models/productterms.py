"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .productterm import ProductTerm, ProductTermTypedDict
from glean.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ProductTermsTypedDict(TypedDict):
    r"""Mapping of product terms to the term's description. These product terms should match their counterpart in productTerms.json"""

    assistant: NotRequired[ProductTermTypedDict]
    glean_assistant: NotRequired[ProductTermTypedDict]
    public_knowledge: NotRequired[ProductTermTypedDict]


class ProductTerms(BaseModel):
    r"""Mapping of product terms to the term's description. These product terms should match their counterpart in productTerms.json"""

    assistant: Annotated[Optional[ProductTerm], pydantic.Field(alias="Assistant")] = (
        None
    )

    glean_assistant: Annotated[
        Optional[ProductTerm], pydantic.Field(alias="GleanAssistant")
    ] = None

    public_knowledge: Annotated[
        Optional[ProductTerm], pydantic.Field(alias="PublicKnowledge")
    ] = None
