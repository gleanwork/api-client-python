"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .collectionpinmetadata import CollectionPinMetadata, CollectionPinMetadataTypedDict
from enum import Enum
from glean.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class PinCollectionRequestAction(str, Enum):
    r"""Whether to pin or unpin"""

    PIN = "PIN"
    UNPIN = "UNPIN"


class PinCollectionRequestTypedDict(TypedDict):
    action: NotRequired[PinCollectionRequestAction]
    r"""Whether to pin or unpin"""
    data: NotRequired[CollectionPinMetadataTypedDict]


class PinCollectionRequest(BaseModel):
    action: Optional[PinCollectionRequestAction] = PinCollectionRequestAction.PIN
    r"""Whether to pin or unpin"""

    data: Optional[CollectionPinMetadata] = None
