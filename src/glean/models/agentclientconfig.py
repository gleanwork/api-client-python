"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .agentconfig import AgentConfig, AgentConfigTypedDict
from glean.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AgentClientConfigTypedDict(TypedDict):
    r"""Describes the configurations that GleanChat has based on an AgentConfig."""

    agent_config: NotRequired[AgentConfigTypedDict]
    r"""Describes the agent that executes the request."""
    input_char_limit: NotRequired[int]
    r"""The character limit of an input to GleanChat under the specified AgentConfig."""


class AgentClientConfig(BaseModel):
    r"""Describes the configurations that GleanChat has based on an AgentConfig."""

    agent_config: Annotated[
        Optional[AgentConfig], pydantic.Field(alias="agentConfig")
    ] = None
    r"""Describes the agent that executes the request."""

    input_char_limit: Annotated[
        Optional[int], pydantic.Field(alias="inputCharLimit")
    ] = None
    r"""The character limit of an input to GleanChat under the specified AgentConfig."""
