"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .inputfieldoption import InputFieldOption, InputFieldOptionTypedDict
from .inputfieldtype import InputFieldType, InputFieldTypeTypedDict
from glean.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class WorkflowInputFieldTypedDict(TypedDict):
    r"""Input field argument of a workflow."""

    name: NotRequired[str]
    r"""The name of the input."""
    display_name: NotRequired[str]
    r"""Name of the field as displayed to the user."""
    description: NotRequired[str]
    r"""Description of the field."""
    default_value: NotRequired[str]
    r"""Default value for the field."""
    optional: NotRequired[bool]
    r"""Whether this field is optional."""
    type: NotRequired[InputFieldTypeTypedDict]
    options: NotRequired[List[InputFieldOptionTypedDict]]
    r"""Options for SELECT field type."""


class WorkflowInputField(BaseModel):
    r"""Input field argument of a workflow."""

    name: Optional[str] = None
    r"""The name of the input."""

    display_name: Annotated[Optional[str], pydantic.Field(alias="displayName")] = None
    r"""Name of the field as displayed to the user."""

    description: Optional[str] = None
    r"""Description of the field."""

    default_value: Annotated[Optional[str], pydantic.Field(alias="defaultValue")] = None
    r"""Default value for the field."""

    optional: Optional[bool] = None
    r"""Whether this field is optional."""

    type: Optional[InputFieldType] = None

    options: Optional[List[InputFieldOption]] = None
    r"""Options for SELECT field type."""
