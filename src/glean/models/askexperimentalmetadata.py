"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AskExperimentalMetadataTypedDict(TypedDict):
    query_has_mentions: NotRequired[bool]
    r"""Whether or not the query (i.e. the slack message) has a mention."""
    query_is_length_appropriate: NotRequired[bool]
    r"""Whether or not the query (i.e. the slack message) is length appropriate."""
    query_is_answerable: NotRequired[bool]
    r"""Whether or not the query (i.e. the slack message) has a question term."""


class AskExperimentalMetadata(BaseModel):
    query_has_mentions: Annotated[
        Optional[bool], pydantic.Field(alias="QueryHasMentions")
    ] = None
    r"""Whether or not the query (i.e. the slack message) has a mention."""

    query_is_length_appropriate: Annotated[
        Optional[bool], pydantic.Field(alias="QueryIsLengthAppropriate")
    ] = None
    r"""Whether or not the query (i.e. the slack message) is length appropriate."""

    query_is_answerable: Annotated[
        Optional[bool], pydantic.Field(alias="QueryIsAnswerable")
    ] = None
    r"""Whether or not the query (i.e. the slack message) has a question term."""
