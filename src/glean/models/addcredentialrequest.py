"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AddCredentialRequestTypedDict(TypedDict):
    datasource: NotRequired[str]
    r"""the datasource the credential applies to"""
    datasource_instance: NotRequired[str]
    r"""the datasource instance the credential applies to"""
    user: NotRequired[str]
    r"""the user info (email or username for example) for the credential"""
    token: NotRequired[str]
    r"""the token part of the credential (password, apiToken etc)"""
    metadata: NotRequired[str]
    r"""any metadata associated with the user credential"""


class AddCredentialRequest(BaseModel):
    datasource: Optional[str] = None
    r"""the datasource the credential applies to"""

    datasource_instance: Annotated[
        Optional[str], pydantic.Field(alias="datasourceInstance")
    ] = None
    r"""the datasource instance the credential applies to"""

    user: Optional[str] = None
    r"""the user info (email or username for example) for the credential"""

    token: Optional[str] = None
    r"""the token part of the credential (password, apiToken etc)"""

    metadata: Optional[str] = None
    r"""any metadata associated with the user credential"""
