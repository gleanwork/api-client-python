"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .autoagentconfig import AutoAgentConfig, AutoAgentConfigTypedDict
from .gleansearchconfig import GleanSearchConfig, GleanSearchConfigTypedDict
from .respondconfig import RespondConfig, RespondConfigTypedDict
from .thinkconfig import ThinkConfig, ThinkConfigTypedDict
from .workflowtoolparameter import WorkflowToolParameter, WorkflowToolParameterTypedDict
from glean.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class WorkflowToolConfigTypedDict(TypedDict):
    id: NotRequired[str]
    r"""The id of the action/tool being used."""
    name: NotRequired[str]
    r"""The name of the tool being used."""
    datasources_filter: NotRequired[List[str]]
    r"""Run this tool on only these datasource instance ids."""
    input_template: NotRequired[List[WorkflowToolParameterTypedDict]]
    glean_search_config: NotRequired[GleanSearchConfigTypedDict]
    r"""Configuration for the Glean Search action."""
    auto_agent_config: NotRequired[AutoAgentConfigTypedDict]
    r"""Configuration for the Auto Agent action, which supports having an array of actions in turn within it."""
    think_config: NotRequired[ThinkConfigTypedDict]
    r"""Configuration for the Think tool."""
    respond_config: NotRequired[RespondConfigTypedDict]
    r"""Configuration for the Respond tool."""


class WorkflowToolConfig(BaseModel):
    id: Optional[str] = None
    r"""The id of the action/tool being used."""

    name: Optional[str] = None
    r"""The name of the tool being used."""

    datasources_filter: Annotated[
        Optional[List[str]], pydantic.Field(alias="datasourcesFilter")
    ] = None
    r"""Run this tool on only these datasource instance ids."""

    input_template: Annotated[
        Optional[List[WorkflowToolParameter]], pydantic.Field(alias="inputTemplate")
    ] = None

    glean_search_config: Annotated[
        Optional[GleanSearchConfig], pydantic.Field(alias="gleanSearchConfig")
    ] = None
    r"""Configuration for the Glean Search action."""

    auto_agent_config: Annotated[
        Optional[AutoAgentConfig], pydantic.Field(alias="autoAgentConfig")
    ] = None
    r"""Configuration for the Auto Agent action, which supports having an array of actions in turn within it."""

    think_config: Annotated[
        Optional[ThinkConfig], pydantic.Field(alias="thinkConfig")
    ] = None
    r"""Configuration for the Think tool."""

    respond_config: Annotated[
        Optional[RespondConfig], pydantic.Field(alias="respondConfig")
    ] = None
    r"""Configuration for the Respond tool."""
