"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .answerboard import AnswerBoard, AnswerBoardTypedDict
from glean.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AnswerBoardResultTypedDict(TypedDict):
    board: AnswerBoardTypedDict
    tracking_token: NotRequired[str]
    r"""An opaque token that represents this particular Answer Board. To be used for /feedback reporting."""


class AnswerBoardResult(BaseModel):
    board: AnswerBoard

    tracking_token: Annotated[Optional[str], pydantic.Field(alias="trackingToken")] = (
        None
    )
    r"""An opaque token that represents this particular Answer Board. To be used for /feedback reporting."""
