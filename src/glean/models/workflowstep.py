"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .workflowtoolconfig import WorkflowToolConfig, WorkflowToolConfigTypedDict
from enum import Enum
from glean.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class MemoryConfig(str, Enum):
    r"""Memory used to plan the tool's inputs."""

    ALL_DEPENDENCIES = "ALL_DEPENDENCIES"
    IMMEDIATE_DEPENDENCIES = "IMMEDIATE_DEPENDENCIES"
    NO_MEMORY = "NO_MEMORY"


class WorkflowStepTypedDict(TypedDict):
    id: NotRequired[str]
    r"""The id of this step in the workflow."""
    label: NotRequired[str]
    r"""A label associated with the step."""
    instruction_template: NotRequired[str]
    r"""The templatic input to the workflow step."""
    tool_config: NotRequired[List[WorkflowToolConfigTypedDict]]
    memory_config: NotRequired[MemoryConfig]
    r"""Memory used to plan the tool's inputs."""


class WorkflowStep(BaseModel):
    id: Optional[str] = None
    r"""The id of this step in the workflow."""

    label: Optional[str] = None
    r"""A label associated with the step."""

    instruction_template: Annotated[
        Optional[str], pydantic.Field(alias="instructionTemplate")
    ] = None
    r"""The templatic input to the workflow step."""

    tool_config: Annotated[
        Optional[List[WorkflowToolConfig]], pydantic.Field(alias="toolConfig")
    ] = None

    memory_config: Annotated[
        Optional[MemoryConfig], pydantic.Field(alias="memoryConfig")
    ] = None
    r"""Memory used to plan the tool's inputs."""
