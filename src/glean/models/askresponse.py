"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chatresponse import ChatResponse, ChatResponseTypedDict
from .searchresponse import SearchResponse, SearchResponseTypedDict
from glean.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AskResponseTypedDict(TypedDict):
    is_question: bool
    r"""Whether or not the query was a question."""
    question: NotRequired[str]
    r"""The part of the query which was used as a question for search"""
    search_response: NotRequired[SearchResponseTypedDict]
    chat_response: NotRequired[ChatResponseTypedDict]
    r"""A single response from the /chat backend."""


class AskResponse(BaseModel):
    is_question: Annotated[bool, pydantic.Field(alias="isQuestion")]
    r"""Whether or not the query was a question."""

    question: Optional[str] = None
    r"""The part of the query which was used as a question for search"""

    search_response: Annotated[
        Optional[SearchResponse], pydantic.Field(alias="searchResponse")
    ] = None

    chat_response: Annotated[
        Optional[ChatResponse], pydantic.Field(alias="chatResponse")
    ] = None
    r"""A single response from the /chat backend."""
