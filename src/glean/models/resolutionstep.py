"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ResolutionStepTypedDict(TypedDict):
    r"""A step to take to resolve an alert"""

    step_text: NotRequired[str]
    r"""text for what step to take"""
    link: NotRequired[str]
    r"""optional link url for instructions"""
    metadata: NotRequired[List[str]]
    r"""optional metadata for the step"""


class ResolutionStep(BaseModel):
    r"""A step to take to resolve an alert"""

    step_text: Annotated[Optional[str], pydantic.Field(alias="stepText")] = None
    r"""text for what step to take"""

    link: Optional[str] = None
    r"""optional link url for instructions"""

    metadata: Optional[List[str]] = None
    r"""optional metadata for the step"""
