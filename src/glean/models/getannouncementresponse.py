"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .announcement import Announcement, AnnouncementTypedDict
from .announcementerror import AnnouncementError, AnnouncementErrorTypedDict
from glean.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetAnnouncementResponseTypedDict(TypedDict):
    announcement: NotRequired[AnnouncementTypedDict]
    tracking_token: NotRequired[str]
    r"""An opaque token that represents this particular announcement. To be used for /feedback reporting."""
    error: NotRequired[AnnouncementErrorTypedDict]


class GetAnnouncementResponse(BaseModel):
    announcement: Optional[Announcement] = None

    tracking_token: Annotated[Optional[str], pydantic.Field(alias="trackingToken")] = (
        None
    )
    r"""An opaque token that represents this particular announcement. To be used for /feedback reporting."""

    error: Optional[AnnouncementError] = None
