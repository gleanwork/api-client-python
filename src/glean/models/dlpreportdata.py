"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .dlpsimpleresult import DlpSimpleResult
from datetime import datetime
from enum import Enum
from glean.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class Frequency(str, Enum):
    r"""The frequency of the report"""

    WEEKLY = "WEEKLY"
    ONCE = "ONCE"


class DlpReportDataTypedDict(TypedDict):
    r"""Dlp report metadata which is used to construct report email"""

    frequency: NotRequired[Frequency]
    r"""The frequency of the report"""
    request_time: NotRequired[datetime]
    r"""The time the report was requested, applicable only for one time reports"""
    report_name: NotRequired[str]
    status: NotRequired[DlpSimpleResult]


class DlpReportData(BaseModel):
    r"""Dlp report metadata which is used to construct report email"""

    frequency: Optional[Frequency] = None
    r"""The frequency of the report"""

    request_time: Annotated[Optional[datetime], pydantic.Field(alias="requestTime")] = (
        None
    )
    r"""The time the report was requested, applicable only for one time reports"""

    report_name: Annotated[Optional[str], pydantic.Field(alias="reportName")] = None

    status: Optional[DlpSimpleResult] = None
